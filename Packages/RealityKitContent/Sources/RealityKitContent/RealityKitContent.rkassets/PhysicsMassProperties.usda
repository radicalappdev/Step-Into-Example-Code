#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.100.13)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["MassMat", "Capsule_Center", "Capsule_Top", "Capsule_Bottom", "CapsuleMat", "Base"]
    def Cube "Base" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        reorder nameChildren = ["CapsuleMat", "MaplePlywood", "Collider", "RigidBody"]
        rel material:binding = </Root/Base/MaplePlywood> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.8
        float2 ui:nodegraph:node:pos = (160, 160)
        int ui:nodegraph:node:stackingOrder = 8
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 0.05, 1)
        float3 xformOp:translate = (0, -0.025, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.8, 0.8, 0.8)
                token shapeType = "Box"

                def RealityKitStruct "pose"
                {
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            bool gravityEnabled = 0
            uniform token info:id = "RealityKit.RigidBody"
            token motionType = "Static"

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
                double restitution = 0.2
            }
        }

        def "MaplePlywood" (
            active = true
            references = @MaplePlywood.usdz@
        )
        {
            token outputs:mtlx:surface.connect = </Root/Base/MaplePlywood/PreviewSurface.outputs:out>
            float2 ui:nodegraph:node:pos = (100, 100)
            int ui:nodegraph:node:stackingOrder = 5
        }
    }

    def Capsule "Capsule_Center" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, 0, -0.6283186)
        }
    )
    {
        reorder nameChildren = ["Collider", "RigidBody", "Sphere"]
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </Root/CapsuleMat>
        double radius = 0.1
        quatf xformOp:orient = (0.9510565, 0, 0, -0.309017)
        float3 xformOp:scale = (0.8, 0.8, 0.8000001)
        float3 xformOp:translate = (0, 0.4, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.4, 0.20000002)
                float height = 0.4
                float radius = 0.10000001
                token shapeType = "Capsule"

                def RealityKitStruct "pose"
                {
                    float3 position = (0, 0, -3.7252903e-9)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def Sphere "Sphere" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/MassMat>
            double radius = 0.02
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def Material "CapsuleMat"
    {
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/CapsuleMat/DefaultSurfaceShader.outputs:surface>

        def Shader "DefaultSurfaceShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.83137256, 0.73333335, 0.73333335) (
                colorSpace = "srgb_displayp3"
            )
            float inputs:opacity = 0.6
            float inputs:roughness = 0.75
            token outputs:surface
        }
    }

    def Material "MassMat"
    {
        token outputs:mtlx:surface
        token outputs:realitykit:vertex
        token outputs:surface.connect = </Root/MassMat/DefaultSurfaceShader.outputs:surface>

        def Shader "DefaultSurfaceShader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor = (0.41960785, 0.003921569, 0.17254902) (
                colorSpace = "srgb_texture"
            )
            float inputs:roughness = 0.75
            token outputs:surface
        }
    }

    def Capsule "Capsule_Top" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, 0, -0.6283186)
        }
    )
    {
        reorder nameChildren = ["Collider", "RigidBody", "Sphere"]
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </Root/CapsuleMat>
        double radius = 0.1
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (0.9510565, 0, 0, -0.30901706)
        float3 xformOp:scale = (0.8, 0.8, 0.8000001)
        float3 xformOp:translate = (0, 0.4, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.4, 0.20000002)
                float height = 0.4
                float radius = 0.10000001
                token shapeType = "Capsule"

                def RealityKitStruct "pose"
                {
                    float3 position = (0, 0, -3.7252903e-9)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                    float3 position = (0, 0.2, 0)
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def Sphere "Sphere" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/MassMat>
            double radius = 0.02
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (6.7055225e-7, 0.2, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }

    def Capsule "Capsule_Bottom" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
        customData = {
            float3 rotationEulerHint = (0, 0, -0.6283186)
        }
    )
    {
        reorder nameChildren = ["Collider", "RigidBody", "Sphere"]
        uniform token axis = "Y"
        double height = 0.2
        rel material:binding = </Root/CapsuleMat>
        double radius = 0.1
        float2 ui:nodegraph:node:pos = (40, 40)
        int ui:nodegraph:node:stackingOrder = 2
        quatf xformOp:orient = (0.9510565, 0, 0, -0.30901706)
        float3 xformOp:scale = (0.8, 0.8, 0.8000001)
        float3 xformOp:translate = (0, 0.4, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.2, 0.4, 0.20000002)
                float height = 0.4
                float radius = 0.10000001
                token shapeType = "Capsule"

                def RealityKitStruct "pose"
                {
                    float3 position = (0, 0, -3.7252903e-9)
                }
            }
        }

        def RealityKitComponent "RigidBody"
        {
            uniform token info:id = "RealityKit.RigidBody"

            def RealityKitStruct "massFrame"
            {
                def RealityKitStruct "m_pose"
                {
                    float3 position = (0, -0.2, 0)
                }
            }

            def RealityKitStruct "material"
            {
            }
        }

        def Sphere "Sphere" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </Root/MassMat>
            double radius = 0.02
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            float3 xformOp:translate = (6.7055225e-7, -0.2, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }
    }
}

