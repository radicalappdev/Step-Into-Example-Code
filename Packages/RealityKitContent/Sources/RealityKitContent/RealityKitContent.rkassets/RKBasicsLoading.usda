#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.60.4)"
    }
    defaultPrim = "Root"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "Root"
{
    reorder nameChildren = ["Base", "MaplePlywood", "Moon", "Earth", "MoonTimelineExample"]
    def Cube "Base" (
        active = true
        prepend apiSchemas = ["MaterialBindingAPI"]
    )
    {
        rel material:binding = </Root/MaplePlywood> (
            bindMaterialAs = "weakerThanDescendants"
        )
        double size = 0.8
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
        quatf xformOp:orient = (1, 0, 0, 0)
        float3 xformOp:scale = (1, 0.05, 1)
        float3 xformOp:translate = (0, -0.025, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
    }

    def "MaplePlywood" (
        active = true
        references = @MaplePlywood.usdz@
    )
    {
        token outputs:mtlx:surface.connect = </Root/MaplePlywood/PreviewSurface.outputs:out>
        float2 ui:nodegraph:node:pos = (20, 20)
        int ui:nodegraph:node:stackingOrder = 1
    }

    def "Earth" (
        active = true
        customData = {
            float3 rotationEulerHint = (-0.408407, 0, 0)
        }
        references = @Earth.usdz@
    )
    {
        reorder nameChildren = ["geom", "InputTarget", "Collider", "RCP_BehaviorsContainer", "OnTap", "Moon"]
        quatf xformOp:orient = (0.97922283, -0.20278728, 0, 0)
        float3 xformOp:scale = (2, 2, 2)
        float3 xformOp:translate = (0, 0.3, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "InputTarget"
        {
            uniform token info:id = "RealityKit.InputTarget"
        }

        def RealityKitComponent "Collider"
        {
            uint group = 1
            uniform token info:id = "RealityKit.Collider"
            uint mask = 4294967295
            token type = "Default"

            def RealityKitStruct "Shape"
            {
                float3 extent = (0.20499998, 0.205, 0.20500001)
                float radius = 0.10250001
                token shapeType = "Sphere"

                def RealityKitStruct "pose"
                {
                    float3 position = (0.00004060194, 0, 0.00011316314)
                }
            }
        }
    }

    def RealityKitTimeline "MoonTimelineExample"
    {
        reorder nameChildren = ["Track", "Track2", "Track3", "Track", "Track4"]
        def RealityKitTrack "Track"
        {
            def RealityKitAction "Orbit"
            {
                string actionKind = "orbit"
                int blendLayer = 300
                double duration = 3
                uniform token info:id = "A893AA50-BBCF-4985-B777-7ADFB1F5248A"
                rel pivotEntity = </Root/Earth>
                double startTime = 0
                rel target = </Root/Moon>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
            }
        }

        def RealityKitTrack "Track4"
        {
            def RealityKitAction "Spin"
            {
                string actionKind = "spin"
                int blendLayer = 400
                double duration = 3
                uniform token info:id = "70442AE0-E90A-49A1-905D-C517661E9D60"
                double startTime = 0
                rel target = </Root/Moon>
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1

                def RealityKitStruct "timingFunction"
                {
                    token type = "linear"
                }
            }
        }
    }

    def "Moon" (
        active = true
        references = @Moon.usdz@
    )
    {
        quatf xformOp:orient = (1, -6.433717e-10, 0, 0)
        float3 xformOp:scale = (0.5, 0.49999997, 0.49999997)
        float3 xformOp:translate = (0.384, 0.25268215, -0.109345235)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def RealityKitComponent "RCP_BehaviorsContainer"
        {
            rel behaviors = </Root/Moon/OnTap>
            uniform token info:id = "RCP.BehaviorsContainer"
        }

        def Preliminary_Behavior "OnTap"
        {
            rel actions = </Root/Moon/OnTap/Action>
            uniform bool exclusive
            rel triggers = </Root/Moon/OnTap/Trigger>

            def Preliminary_Trigger "Trigger"
            {
                rel affectedObjects = </Root/Moon>
                token info:id = "TapGesture"
            }

            def Preliminary_Action "Action"
            {
                rel affectedObjects = </Root>
                rel animationLibraryKey = </Root/MoonTimelineExample>
                rel animationLibraryKeyOverrideKey = </Root/Moon/OnTap/Trigger>
                token info:id = "PlayTimeline"
                int loops = 0
                int performCount = 1
                token type = "serial"
            }
        }
    }
}

